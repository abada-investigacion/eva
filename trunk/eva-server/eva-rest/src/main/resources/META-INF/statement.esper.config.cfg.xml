<?xml version="1.0" encoding="UTF-8"?>
<statements>
    <statement name="sepsissyndrome">
        <springContext><![CDATA[
        <beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"             
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd          
">
<bean id="jsonConverter" class="com.abada.springframework.http.converter.json.JsonHttpMessageConverter" >
        <property name="jsonProperties">
            <map>
                <entry key="DATE_FORMAT" value="yyyy-MM-dd HH:mm:ss" />
            </map>
        </property>
    </bean>            
<bean id="restTemplateFactory" class="com.abada.springframework.web.client.RestTemplateFactory" >
        <property name="messageConverters">
            <list>
                <ref bean="jsonConverter" />
            </list>
        </property>
    </bean>
<bean id="sepsisSyndromeAction" class="com.abada.eva.action.dimex.sepsis.SepsisSyndromeAction" />
    <bean id="sepsisSyndormeUL" class="com.abada.eva.action.dimex.sepsis.SepsisSyndromeUpdateListener" >
        <property name="url" value="http://192.168.1.29:8080/dimex-rest/rs/consult/tiene%20sepsis"/>
            <property name="user" value="admin"/>
            <property name="password" value="admin"/>
            <property name="templateFactory" ref="restTemplateFactory"/>
        <property name="actions">
            <list>
                <ref bean="sepsisSyndromeAction" />
            </list>
        </property>
            <property name="symptoms">
            <map>
                <entry key="18688-2LN" value="temperatura-corporal" />
                <entry key="18708-8LN" value="frecuencia-cardiaca" />
                <entry key="18686-6LN" value="frecuencia-respiratoria" />
                <entry key="2345-7LN" value="glucosa" />
                <entry key="26464-8LN" value="leucocitos" />
                <entry key="1382692699G2" value="formas-inmaduras" />
                <entry key="1988-5LN" value="proteinas-c-reactiva" />
                <entry key="33959-8LN" value="procalcitonina" />
                <entry key="2711-0LN" value="hipoxemia-svcO2" />
            </map>
        </property>
    </bean>
    </beans>    
        ]]>
        </springContext>
        <EPL> <![CDATA[expression boolean js:checkNoHemocultivo(oru)[
    importClass (java.lang.System);     
                  
    checkNoHemocultivo(oru);
    function checkNoHemocultivo(oru) {
        
        var orobs = oru.getPATIENT_RESULT().getORDER_OBSERVATIONAll();
        
        for(var i=0 ; i<orobs.size() ; i++){
            
            var obs = orobs.get(i).getOBSERVATIONAll();
             
            for(var e=0 ; e<obs.size() ; e++){
                 
                var obx = obs.get(e).getOBX();
                
                var code = obx.getObx3_ObservationIdentifier().getCe1_Identifier().getValue();
                 
                var codeSystem = obx.getObx3_ObservationIdentifier().getCe3_NameOfCodingSystem().getValue();
               
                
                if((code == "6463-4" || code == "41852-5") && codeSystem == "LN"){
                    return false;
                }

            }
        }
        return true;
    }
]

expression boolean js:checkPatient(c, oru) [

    importClass (java.lang.System);     
                  
    checkPatient(c, oru);
    function checkPatient(c, oru) {
     
      var pid3 = oru.getPATIENT_RESULT().getPATIENT().getPID().getPatientIdentifierList();
        
      for(var i=0 ; i<pid3.length ; i++){
        
        var code = pid3[i].getCx5_IdentifierTypeCode().getValue();
        var id = pid3[i].getCx1_IDNumber().getValue();
        
        if( code.equals("PI") && id.equals(c.getNhc())){
            return true;
        }
      }
      
      return false;
    }
]

select c, oru from pattern [ (every-distinct(c.getIdentificador()) c=CDABEAN -> every oru=ORU_R01(checkPatient(c,oru), checkNoHemocultivo(oru))) or (every-distinct(oru.getMSH().getMsh10_MessageControlID().getValue()) oru=ORU_R01(checkNoHemocultivo(oru)) -> every c=CDABEAN(checkPatient(c,oru))) where timer:within(12 hours)]


        ]]>
        </EPL>
    </statement>
    <statement name="simplesepsis">
        <springContext><![CDATA[
        <beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"             
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd          
">
<bean id="jsonConverter" class="com.abada.springframework.http.converter.json.JsonHttpMessageConverter" >
        <property name="jsonProperties">
            <map>
                <entry key="DATE_FORMAT" value="yyyy-MM-dd HH:mm:ss" />
            </map>
        </property>
    </bean>            
<bean id="restTemplateFactory" class="com.abada.springframework.web.client.RestTemplateFactory" >
        <property name="messageConverters">
            <list>
                <ref bean="jsonConverter" />
            </list>
        </property>
    </bean>
<bean id="simpleSepsisAction" class="com.abada.eva.action.dimex.sepsis.SimpleSepsisAction" />
    <bean id="simpleSepsisUL" class="com.abada.eva.action.dimex.sepsis.SimpleSepsisUpdateListener" >
        <property name="url" value="http://192.168.1.29:8080/dimex-rest/rs/consult/sepsis%20simple"/>
            <property name="user" value="admin"/>
            <property name="password" value="admin"/>
            <property name="templateFactory" ref="restTemplateFactory"/>
        <property name="actions">
            <list>
                <ref bean="simpleSepsisAction" />
            </list>
        </property>
            
    </bean>
    </beans>    
        ]]>
        </springContext>
        <EPL> <![CDATA[expression boolean js:checkPatient(c, oru) [

    importClass (java.lang.System);     
                
    checkPatient(c, oru);
    function checkPatient(c, oru) {
        var pid3 = oru.getPATIENT_RESULT().getPATIENT().getPID().getPatientIdentifierList();
        
        for(var i=0 ; i<pid3.length ; i++){
        
            var code = pid3[i].getCx5_IdentifierTypeCode().getValue();
            var id = pid3[i].getCx1_IDNumber().getValue();
        
            if( code.equals("PI") && id.equals(c.getNhc())){
                System.out.println("checkpatient success");  
                return true;
            }
        }
        System.out.println("checkpatient failed"); 
        return false;
    }
]

expression boolean js:checkHemocultivo(oru) [

    importClass (java.lang.System);     
                  
    checkHemocultivo(oru);
    function checkHemocultivo(oru) {
          
       var orobs = oru.getPATIENT_RESULT().getORDER_OBSERVATIONAll();
        
        for(var i=0 ; i<orobs.size() ; i++){
            
            var obs = orobs.get(i).getOBSERVATIONAll();
             
            for(var e=0 ; e<obs.size() ; e++){
                 
                var obx = obs.get(e).getOBX();
                
                var code = obx.getObx3_ObservationIdentifier().getCe1_Identifier().getValue();
                 
                var codeSystem = obx.getObx3_ObservationIdentifier().getCe3_NameOfCodingSystem().getValue();
                
                if((code == "6463-4" || code == "41852-5") && codeSystem == "LN"){
                    return true;
                }

            }
        }
        return false;
    }
]


select ss, oru from pattern [ (every-distinct(ss.getUUID()) ss=SEPSIS_SYNDROME -> every oru=ORU_R01(checkPatient(ss,oru),checkHemocultivo(oru)))or(every-distinct(oru.getMSH().getMsh10_MessageControlID().getValue()) oru=ORU_R01 -> every ss=SEPSIS_SYNDROME(checkPatient(ss,oru),checkHemocultivo(oru))) where timer:within(12 hours)]

        ]]>
        </EPL>
    </statement>
    <statement name="severesepsis">
        <springContext><![CDATA[
        <beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"             
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd          
">
<bean id="jsonConverter" class="com.abada.springframework.http.converter.json.JsonHttpMessageConverter" >
        <property name="jsonProperties">
            <map>
                <entry key="DATE_FORMAT" value="yyyy-MM-dd HH:mm:ss" />
            </map>
        </property>
    </bean>            
<bean id="restTemplateFactory" class="com.abada.springframework.web.client.RestTemplateFactory" >
        <property name="messageConverters">
            <list>
                <ref bean="jsonConverter" />
            </list>
        </property>
    </bean>
<bean id="severeSepsisAction" class="com.abada.eva.action.dimex.sepsis.SevereSepsisAction" />
    <bean id="severeSepsisUL" class="com.abada.eva.action.dimex.sepsis.SevereSepsisUpdateListener" >
        <property name="url" value="http://192.168.1.29:8080/dimex-rest/rs/consult/sepsis%20grave"/>
            <property name="user" value="admin"/>
            <property name="password" value="admin"/>
            <property name="templateFactory" ref="restTemplateFactory"/>
        <property name="actions">
            <list>
                <ref bean="severeSepsisAction" />
            </list>
        </property>
            <property name="symptoms">
            <map>
                <entry key="2711-0LN" value="hipoxemia-svcO2" />
                <entry key="2160-0LN" value="creatinina" />
                <entry key="26515-7LN" value="trombocitopenia" />
                <entry key="1975-2LN" value="bilirrubina" />
                <entry key="6301-6LN" value="inr" />
                <entry key="14979-9LN" value="ttpa" />
                <entry key="18684-1LN" value="tension-arterial" />
            </map>
        </property>
    </bean>
    </beans>    
        ]]>
        </springContext>
        <EPL> <![CDATA[expression boolean js:checkPatient(c, oru) [

    importClass (java.lang.System);     
                  
    checkPatient(c, oru);
    function checkPatient(c, oru) {
     
      var pid3 = oru.getPATIENT_RESULT().getPATIENT().getPID().getPatientIdentifierList();
        
      for(var i=0 ; i<pid3.length ; i++){
        
        var code = pid3[i].getCx5_IdentifierTypeCode().getValue();
        var id = pid3[i].getCx1_IDNumber().getValue();
        
        if( code.equals("PI") && id.equals(c.getNhc())){
            return true;
        }
      }
      
      return false;
    }
]

expression boolean js:checkNoHemocultivo(oru)[
    importClass (java.lang.System);     
                  
    checkNoHemocultivo(oru);
    function checkNoHemocultivo(oru) {
        
        var orobs = oru.getPATIENT_RESULT().getORDER_OBSERVATIONAll();
        
        for(var i=0 ; i<orobs.size() ; i++){
            
            var obs = orobs.get(i).getOBSERVATIONAll();
             
            for(var e=0 ; e<obs.size() ; e++){
                 
                var obx = obs.get(e).getOBX();
                
                var code = obx.getObx3_ObservationIdentifier().getCe1_Identifier().getValue();
                 
                var codeSystem = obx.getObx3_ObservationIdentifier().getCe3_NameOfCodingSystem().getValue();
                
                if((code == "6463-4" || code == "41852-5") && codeSystem == "LN"){
                    return false;
                }

            }
        }
        return true;
    }
]

select c, s, oru from pattern [ (every-distinct(c.getIdentificador()) c=CDABEAN -> every oru=ORU_R01(checkPatient(c,oru), checkNoHemocultivo(oru)) -> every s=SEPSIS_SIMPLE(checkPatient(s,oru))) or 
(every-distinct(oru.getMSH().getMsh10_MessageControlID().getValue()) oru=ORU_R01(checkNoHemocultivo(oru)) -> every c=CDABEAN(checkPatient(c,oru)) -> every s=SEPSIS_SIMPLE(checkPatient(s,oru))) where timer:within(12 hours)]

        ]]>
        </EPL>
    </statement>
    <statement name="omp">
        <springContext><![CDATA[
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"             
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd          
">

<bean id="patternOmp" class="com.abada.eva.test.action.PatternAction" />

</beans>
]]>
        </springContext>
        <EPL> <![CDATA[select a02.* from pattern [every a01=ADT_A01(a01.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A01') -> 
       every a02=ADT_A01(a02.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A02' 
       and a02.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() 
       and a02.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()) 
       and not a03=ADT_A03(a03.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() 
       and a03.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue())]]]>
        </EPL> 
 
    </statement>
    <statement name="referringDoctor">
        <springContext><![CDATA[
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"             
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd          
">

<bean id="patternUpdateDemographics" class="com.abada.eva.test.action.PatternAction" />

</beans>
]]>
        </springContext>
        <EPL> <![CDATA[select a31 from pattern [ every [5] a31=ADT_A05(a31.getMSH().getMessageType().getTriggerEvent().getValue()='A31',a31.getPV1().getReferringDoctor(0).getGivenName().getValue()='Dr. Who')]]]>
        </EPL>
 
    </statement>
    <statement name="allergyAlert">
        <springContext><![CDATA[
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"             
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd          
">

<bean id="patternUpdateDemographics" class="com.abada.eva.test.action.PatternAction" />

</beans>
]]>
        </springContext>
        <EPL> <![CDATA[select a31.* from pattern [ every a31=ADT_A05(a31.getMSH().getMsh9_MessageType().getMsg2_TriggerEvent().getValue()='A31',a31.getAL1().getAllergySeverityCode().getAlternateIdentifier().getValue()='SV')]]]>
        </EPL> 
    </statement>
    
    
    <statement name="allergyAlert">
        <springContext><![CDATA[
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"             
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd          
">

<bean id="patternUpdateDemographics" class="com.abada.eva.test.action.PatternAction" />

</beans>
]]>
        </springContext>
        <EPL> <![CDATA[select o03.* from pattern [ every a01=ADT_A01 -> (every a31=ADT_A05(a31.getMSH().getMsh9_MessageType().getMsg2_TriggerEvent().getValue()='A31',
                       a31.getPID().getPatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue(),
                       a31.getPID().getPatientIdentifierList(0).getCx1_IDNumber.getValue()=a01.getPID().getPatientIdentifierList(0).getCx1_IDNumber.getValue(),
                       a31.getAL1().getAllergenCodeMnemonicDescription().getCe2_Text().getValue() is not null) -> 
                       o03=OMD_O03(o03.getPATIENT().getPID().getPatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue(),
                       o03.getPATIENT().getPID().getPatientIdentifierList(0).getCx1_IDNumber.getValue()=a01.getPID().getPatientIdentifierList(0).getCx1_IDNumber.getValue(),
                       o03.getORDER_DIET().getDIET().getODS().getOds3_DietSupplementOrPreferenceCode(0).getCe2_Text().getValue() like '%HAM%') and not 
                       a03=ADT_A03(a03.getPID().getPatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue(),
                       a03.getPID().getPatientIdentifierList(0).getCx1_IDNumber.getValue()=a01.getPID().getPatientIdentifierList(0).getCx1_IDNumber.getValue())  )]]]>
        </EPL>
 
    </statement>
    
    <statement name="bedChange">
        <springContext><![CDATA[
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"             
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd          
">

<bean id="bedChange" class="com.abada.eva.test.action.PatternAction" />

</beans>
]]>
        </springContext>
        <EPL> <![CDATA[select a02.* from pattern [every a01=ADT_A01(a01.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A01') -> 
       every a02=ADT_A01(a02.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A02' 
       and a02.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() 
       and a02.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()) 
       and not a03=ADT_A03(a03.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() 
       and a03.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue())]]]>
        </EPL>
 
    </statement>
    
    <statement name="bedChange2">
        <springContext><![CDATA[
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"             
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd          
">

<bean id="bedChange" class="com.abada.eva.test.action.PatternAction" />

</beans>
]]>
        </springContext>
        <EPL> <![CDATA[select a02.* from pattern [every a01=ADT_A01(a01.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A01') -> 
        every a02=ADT_A01(a02.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A02' 
        and a02.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() 
        and a02.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()!=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()
        and a01.getPV1().getPv13_AssignedPatientLocation().getPl3_Bed().getValue()=a02.getPV1().getPv13_AssignedPatientLocation().getPl3_Bed().getValue())
        and not a03=ADT_A03(a03.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() 
        and a03.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue())]]]>
        </EPL>
 
    </statement>            
</statements>

