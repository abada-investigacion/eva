<?xml version="1.0" encoding="UTF-8"?>
<statements>
    <statement name="test">
        <springContext><![CDATA[
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"             
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd          
">

<bean id="patternOmp" class="com.abada.eva.test.action.PatternAction" />

</beans>
]]>
        </springContext>
       <EPL> <![CDATA[select a02.* from pattern [every a01=ADT_A01(a01.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A01') -> 
       every a02=ADT_A01(a02.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A02' 
       and a02.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() 
       and a02.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()) 
       and not a03=ADT_A03(a03.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() 
       and a03.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue())]]]>
        </EPL> 
 
    </statement>
    <!--statement name="testisolated">
      <listener>com.abada.eva.test.listener.PruebaListener</listener>
       <EPL> <![CDATA[select a02.* from pattern [every a01=ADT_A01(a01.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A01') -> every a02=ADT_A01(a02.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A02' and a02.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() and a02.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()) and not a03=ADT_A03(a03.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() and a03.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue())]]]>
        </EPL>  </statement-->
    <!--statement name="testisolated">
      <listener>com.abada.eva.test.listener.PruebaListener</listener>
      <EPL> <![CDATA[Select * from OMP_O09 as o09 where o09.getPATIENT().getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() != "null"]]></EPL>
    
     <EPL> <![CDATA[select a02.* from pattern [every a01=ADT_A01(a01.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A01') -> 
        every a02=ADT_A01(a02.getMSH().getMsh9_MessageType().getTriggerEvent().getValue()='A02' 
        and a02.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() 
        and a02.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()!=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()
        and a01.getPV1().getPv13_AssignedPatientLocation().getPl3_Bed().getValue()=a02.getPV1().getPv13_AssignedPatientLocation().getPl3_Bed().getValue())
        and not a03=ADT_A03(a03.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx5_IdentifierTypeCode().getValue() 
        and a03.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue()=a01.getPID().getPid3_PatientIdentifierList(0).getCx1_IDNumber().getValue())]]]>
        </EPL>
    
    
    </statement-->
</statements>
